apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: vsftpd-anon
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
  labels:
    app: vsftpd-anon
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: vsftpd-anon
        release: {{ .Release.Name }}
    spec:

      {{- if and .Values.ftp.pvc.enabled .Values.ftp.pvc.setIncomingPermissions }}
      initContainers:
        - name: vsftpd-anon-init
          image: "{{ .Values.ftp.image.repository }}:{{ .Values.ftp.image.tag }}"
          imagePullPolicy: {{ .Values.ftp.image.pullPolicy }}
          command:
            - sh
            - -x
            - -c
            - install -d -m {{ .Values.ftp.pvc.incomingPermissions }} -o ftp -g {{ .Values.ftp.pvc.incomingGroup }} /var/lib/ftp/incoming
          volumeMounts:
            - name: vsftp-incoming
              mountPath: /var/lib/ftp/incoming
      {{- end }}

      containers:

        - name: vsftpd-anon
          image: "{{ .Values.ftp.image.repository }}:{{ .Values.ftp.image.tag }}"
          imagePullPolicy: {{ .Values.ftp.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.ftp.service.internalPort }}
          {{- range $e := until (sub .Values.ftp.passive.portMax .Values.ftp.passive.portMin | add1 | int) }}
            - containerPort: {{ add $.Values.ftp.passive.portMin . }}
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: 21
          readinessProbe:
            tcpSocket:
              port: 21
          volumeMounts:
            - name: vsftpd-config
              mountPath: /etc/vsftpd/
        {{- if .Values.ftp.pvc.enabled }}
            - name: vsftp-incoming
              mountPath: /var/lib/ftp/incoming
        {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}

      {{- if and .Values.rsync.enabled .Values.ftp.pvc.enabled }}
        - name: rsync-ssh
          image: "{{ .Values.rsync.image.repository }}:{{ .Values.rsync.image.tag }}"
          imagePullPolicy: {{ .Values.rsync.image.pullPolicy }}
          ports:
            - containerPort: 22
          livenessProbe:
            tcpSocket:
              port: 22
          readinessProbe:
            tcpSocket:
              port: 22
          envFrom:
            - configMapRef:
                name: rsync-ssh-users
          volumeMounts:
            - name: vsftp-incoming
              mountPath: /var/lib/ftp/incoming
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- end }}

      volumes:
        - name: vsftpd-config
          configMap:
            name: vsftpd-config
    {{- if .Values.ftp.pvc.enabled }}
        - name: vsftp-incoming
          persistentVolumeClaim:
            claimName: vsftp-incoming
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
